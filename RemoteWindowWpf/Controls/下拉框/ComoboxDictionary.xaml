<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                   
                    xmlns:local="clr-namespace:Controls">


    <Style TargetType="{x:Type ToggleButton}" x:Key="ComboToggleButton">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid x:Name="Grid">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Border Background="{TemplateBinding Background}" x:Name="Bg" Grid.ColumnSpan="2" Margin="0,1,1,1"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"  Opacity="0.3"/>
                        <Path Data="M0 768h1024v128h-1024zM512 128l512 512h-1024z"></Path>

                    </Grid>
                    <!--z触发器-->
                    <!--<ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="BlanchedAlmond" />
                            <Setter Property="Opacity" TargetName="Bg" Value="0.55" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="Beige" />
                            <Setter Property="Opacity" TargetName="Bg" Value="0.6" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Foreground" Value="Aqua" />
                            <Setter Property="Opacity" TargetName="Bg" Value="0.6" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.7" TargetName="Grid"/>
                        </Trigger>
                    </ControlTemplate.Triggers>-->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--编辑状态文本框样式-->
    <Style TargetType="{x:Type TextBox}" x:Key="EditableTextBoxStyle">
        <Setter Property="Margin" Value="1"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="MaxLength" Value="2048"/>

        <Setter Property="Focusable" Value="True"/>

        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="SnapsToDevicePixels" Value="True"></Setter>
        <Style.Triggers>
            <Trigger Property="IsReadOnly" Value="True">
                <Setter Property="Opacity" Value="0.8"></Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.8"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>


    <!--下拉条目样式-->
    <Style TargetType="ComboBoxItem" x:Key="ComboBoxItemStyle">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Height" Value="28" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Grid Background="{TemplateBinding Background}" Margin="0,0.5">
                        <Border x:Name="ItemBackground" IsHitTestVisible="False" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}" />
                        <ContentPresenter x:Name="contentPresenter" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="ItemBackground" Property="Background" Value="{StaticResource ItemSelectedBackground}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ItemBackground" Property="Background" Value="{StaticResource ItemMouseOverBackground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type ComboBox}" x:Key="DefaultComboBox">
        <Setter Property="MaxDropDownHeight" Value="400"></Setter>
        <Setter Property="IsDropDownOpen" Value="False"></Setter>
        <Setter Property="IsEditable" Value="True"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Border BorderBrush="#504f54" BorderThickness="1,1.3,1,1.3" x:Name="PART_Root">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="0.9*" />
                                <ColumnDefinition Width="0.1*" />
                            </Grid.ColumnDefinitions>
                            <!--************************************************************************************************-->
                            <TextBox Foreground="White" Grid.Column="0" VerticalContentAlignment="Center" VerticalAlignment="Bottom" FontSize="{TemplateBinding FontSize}" Background="#3e3e46" BorderThickness="0" 
                                         Width="{Binding ElementName=Contentborder,Path=Width}" Text="{Binding Text, RelativeSource={RelativeSource TemplatedParent},UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" 
                                         x:Name="ContentSite" Height="{TemplateBinding Height}" ></TextBox>
                            <!--************************************************************************************************-->
                            <Border HorizontalAlignment="Stretch" VerticalAlignment="Stretch"   x:Name="togglebutton" BorderBrush="White" BorderThickness="0.5,0,0,0"  Grid.Column="1" >
                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="true" >
                                                <Setter Property="Background" Value="#4A4A4A" > </Setter>
                                            </Trigger>

                                            <Trigger Property="IsMouseOver" Value="false" >
                                                <Setter Property="Background" Value="#3e3e46" ></Setter>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                                
                                <ToggleButton Margin="0"  Background="White"  HorizontalAlignment="Center" VerticalAlignment="Stretch"   Width="{TemplateBinding Height}" Height="{TemplateBinding Height}"
                                          IsChecked="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}">
                                    <ToggleButton.Template>
                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                            <Grid x:Name="grd" Margin="0" Background="#3e3e46">
                                                <Rectangle Margin="8"  HorizontalAlignment="Stretch"  VerticalAlignment="Stretch">
                                                    <Rectangle.Fill>
                                                        <VisualBrush Stretch="Fill">
                                                            <VisualBrush.Visual>
                                                                <Path  RenderTransformOrigin="0.5,0.5"  Fill="#BCC1C7" HorizontalAlignment="Stretch" Data="M0 768h1024v128h-1024zM512 128l512 512h-1024z" VerticalAlignment="Stretch" Stretch="Fill"  >
                                                                    <Path.RenderTransform>
                                                                        <RotateTransform x:Name="rotateTransform" Angle="180" />
                                                                    </Path.RenderTransform>
                                                                </Path>
                                                            </VisualBrush.Visual>
                                                        </VisualBrush>
                                                    </Rectangle.Fill>
                                                </Rectangle>
                                            </Grid>
                                            <!--*******************************************************************************************************-->
                                            <ControlTemplate.Triggers>
                                                <Trigger SourceName="grd" Property="IsMouseOver" Value="true"  >
                                                    <Setter Property="Background" TargetName="grd" Value="#4A4A4A" ></Setter>
                                                    <Setter Property="Cursor" Value="Hand" ></Setter>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </ToggleButton.Template>
                                </ToggleButton>
                            </Border>
                            <!--************************************************************************************************-->
                            <Popup Width="{Binding ElementName=ContentSite,Path=ActualWidth}" 
                                   x:Name="PART_Popup" AllowsTransparency="True" Focusable="False"
                               IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PlacementTarget="{Binding ElementName=ContentSite}"
                               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                                <Grid Width="{Binding ElementName=ContentSite,Path=Width}" Background="White"
                                      MaxHeight="{Binding MaxDropDownHeight, RelativeSource={RelativeSource TemplatedParent}}">
                                    <Border x:Name="PopupBorder" BorderThickness="{TemplateBinding BorderThickness}" HorizontalAlignment="Stretch"
                                        Height="Auto" BorderBrush="{TemplateBinding BorderBrush}">
                                    </Border>
                                    <ScrollViewer x:Name="DropDownScrollViewer" BorderThickness="0" Margin="1">
                                        <ItemsPresenter  x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <!--弹出下拉控件-->
                    </Border>
                    <!--触发器-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="Blue"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter  Property="BorderBrush" Value="LightBlue"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter  Property="BorderBrush" Value="DarkGray"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_Root" Property="Opacity" Value="0.7"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>